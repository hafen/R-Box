{
	"objects" : [
		"address",
		"alloc.col",
		"as.chron.IDate",
		"as.chron.ITime",
		"as.data.table",
		"as.IDate",
		"as.ITime",
		"as.xts.data.table",
		"between",
		"chgroup",
		"chmatch",
		"chorder",
		"CJ",
		"copy",
		"data.table",
		"dcast",
		"dcast.data.table",
		"foverlaps",
		"frank",
		"frankv",
		"fread",
		"getNumericRounding",
		"haskey",
		"hour",
		"IDateTime",
		"is.data.table",
		"key",
		"key2",
		"last",
		"like",
		"mday",
		"melt",
		"melt.data.table",
		"month",
		"quarter",
		"rbindlist",
		"rleid",
		"rleidv",
		"set",
		"set2key",
		"set2keyv",
		"setattr",
		"setcolorder",
		"setDF",
		"setDT",
		"setkey",
		"setkeyv",
		"setnames",
		"setNumericRounding",
		"setorder",
		"setorderv",
		"shift",
		"SJ",
		"tables",
		"test.data.table",
		"timetaken",
		"transpose",
		"truelength",
		"tstrsplit",
		"uniqueN",
		"wday",
		"week",
		"yday",
		"year"
	],
	"methods" : {
		"address" : "address(x) ",
		"alloc.col" : "alloc.col(DT, n = getOption(\"datatable.alloccol\"), verbose = getOption(\"datatable.verbose\")) ",
		"as.chron.IDate" : "as.chron.IDate(x, time = NULL, ...) ",
		"as.chron.ITime" : "as.chron.ITime(x, date = NULL, ...) ",
		"as.data.table" : "as.data.table(x, keep.rownames = FALSE, ...) ",
		"as.IDate" : "as.IDate(x, ...) ",
		"as.ITime" : "as.ITime(x, ...) ",
		"as.xts.data.table" : "as.xts.data.table(x) ",
		"between" : "between(x, lower, upper, incbounds = TRUE) ",
		"chgroup" : "chgroup(x) ",
		"chmatch" : "chmatch(x, table, nomatch = NA_integer_) ",
		"chorder" : "chorder(x) ",
		"CJ" : "CJ(..., sorted = TRUE, unique = FALSE) ",
		"copy" : "copy(x) ",
		"data.table" : "data.table(..., keep.rownames = FALSE, check.names = FALSE, key = NULL) ",
		"dcast" : "dcast(data, formula, fun.aggregate = NULL, ..., margins = NULL, subset = NULL, fill = NULL, value.var = guess(data)) ",
		"dcast.data.table" : "dcast.data.table(data, formula, fun.aggregate = NULL, sep = \"_\", ..., margins = NULL, subset = NULL, fill = NULL, drop = TRUE, value.var = guess(data), verbose = getOption(\"datatable.verbose\")) ",
		"foverlaps" : "foverlaps(x, y, by.x = if (!is.null(key(x))) key(x) else key(y), by.y = key(y), maxgap = 0L, minoverlap = 1L, type = c(\"any\",     \"within\", \"start\", \"end\", \"equal\"), mult = c(\"all\", \"first\",     \"last\"), nomatch = getOption(\"datatable.nomatch\"), which = FALSE, verbose = getOption(\"datatable.verbose\")) ",
		"frank" : "frank(x, ..., na.last = TRUE, ties.method = c(\"average\", \"first\", \"random\", \"max\", \"min\", \"dense\")) ",
		"frankv" : "frankv(x, cols = seq_along(x), order = 1L, na.last = TRUE, ties.method = c(\"average\", \"first\", \"random\", \"max\", \"min\",     \"dense\")) ",
		"fread" : "fread(input = \"\", sep = \"auto\", sep2 = \"auto\", nrows = -1L, header = \"auto\", na.strings = \"NA\", stringsAsFactors = FALSE, verbose = getOption(\"datatable.verbose\"), autostart = 1L, skip = 0L, select = NULL, drop = NULL, colClasses = NULL, integer64 = getOption(\"datatable.integer64\"), dec = if (sep !=     \".\") \".\" else \",\", col.names, check.names = FALSE, encoding = \"unknown\", strip.white = TRUE, showProgress = getOption(\"datatable.showProgress\"), data.table = getOption(\"datatable.fread.datatable\")) ",
		"getNumericRounding" : "getNumericRounding() ",
		"haskey" : "haskey(x) ",
		"hour" : "hour(x) ",
		"IDateTime" : "IDateTime(x, ...) ",
		"is.data.table" : "is.data.table(x) ",
		"key" : "key(x) ",
		"key2" : "key2(x) ",
		"last" : "last(x, ...) ",
		"like" : "like(vector, pattern) ",
		"mday" : "mday(x) ",
		"melt" : "melt(data, ..., na.rm = FALSE, value.name = \"value\") ",
		"melt.data.table" : "melt.data.table(data, id.vars, measure.vars, variable.name = \"variable\", value.name = \"value\", ..., na.rm = FALSE, variable.factor = TRUE, value.factor = FALSE, verbose = getOption(\"datatable.verbose\")) ",
		"month" : "month(x) ",
		"quarter" : "quarter(x) ",
		"rbindlist" : "rbindlist(l, use.names = fill, fill = FALSE, idcol = NULL) ",
		"rleid" : "rleid(...) ",
		"rleidv" : "rleidv(x, cols = seq_along(x)) ",
		"set" : "set(x, i = NULL, j, value) ",
		"set2key" : "set2key(...) ",
		"set2keyv" : "set2keyv(...) ",
		"setattr" : "setattr(x, name, value) ",
		"setcolorder" : "setcolorder(x, neworder) ",
		"setDF" : "setDF(x, rownames = NULL) ",
		"setDT" : "setDT(x, keep.rownames = FALSE, key = NULL, check.names = FALSE) ",
		"setkey" : "setkey(x, ..., verbose = getOption(\"datatable.verbose\"), physical = TRUE) ",
		"setkeyv" : "setkeyv(x, cols, verbose = getOption(\"datatable.verbose\"), physical = TRUE) ",
		"setnames" : "setnames(x, old, new) ",
		"setNumericRounding" : "setNumericRounding(x) ",
		"setorder" : "setorder(x, ..., na.last = FALSE) ",
		"setorderv" : "setorderv(x, cols, order = 1L, na.last = FALSE) ",
		"shift" : "shift(x, n = 1L, fill = NA, type = c(\"lag\", \"lead\"), give.names = FALSE) ",
		"SJ" : "SJ(...) ",
		"tables" : "tables(mb = TRUE, order.col = \"NAME\", width = 80, env = parent.frame(), silent = FALSE) ",
		"test.data.table" : "test.data.table(verbose = FALSE, pkg = \"pkg\") ",
		"timetaken" : "timetaken(started.at) ",
		"transpose" : "transpose(l, fill = NA, ignore.empty = FALSE) ",
		"truelength" : "truelength(x) ",
		"tstrsplit" : "tstrsplit(x, ..., fill = NA, type.convert = FALSE) ",
		"uniqueN" : "uniqueN(x, by = if (is.data.table(x)) key(x) else NULL) ",
		"wday" : "wday(x) ",
		"week" : "week(x) ",
		"yday" : "yday(x) ",
		"year" : "year(x) "
	}
}