{
	"objects" : [
		"accept",
		"accept_json",
		"accept_xml",
		"add_headers",
		"authenticate",
		"brew_dr",
		"BROWSE",
		"build_url",
		"cache_info",
		"config",
		"content",
		"content_type",
		"content_type_json",
		"content_type_xml",
		"cookies",
		"curl_docs",
		"DELETE",
		"GET",
		"guess_media",
		"handle",
		"handle_find",
		"handle_reset",
		"has_content",
		"HEAD",
		"headers",
		"hmac_sha1",
		"http_condition",
		"http_date",
		"http_status",
		"httr_options",
		"init_oauth1.0",
		"init_oauth2.0",
		"insensitive",
		"modify_url",
		"oauth_app",
		"oauth_callback",
		"oauth_endpoint",
		"oauth_endpoints",
		"oauth_exchanger",
		"oauth_header",
		"oauth_listener",
		"oauth_service_token",
		"oauth_signature",
		"oauth1.0_token",
		"oauth2.0_token",
		"parse_http_date",
		"parse_media",
		"parse_url",
		"parsed_content",
		"PATCH",
		"POST",
		"progress",
		"PUT",
		"rerequest",
		"reset_config",
		"revoke_all",
		"safe_callback",
		"set_config",
		"set_cookies",
		"sign_oauth1.0",
		"sign_oauth2.0",
		"status_code",
		"stop_for_status",
		"text_content",
		"timeout",
		"Token",
		"Token1.0",
		"Token2.0",
		"TokenServiceAccount",
		"upload_file",
		"url_ok",
		"url_success",
		"use_proxy",
		"user_agent",
		"VERB",
		"verbose",
		"warn_for_status",
		"with_config",
		"with_verbose",
		"write_disk",
		"write_function",
		"write_init",
		"write_memory",
		"write_opts",
		"write_stream",
		"write_term"
	],
	"methods" : {
		"accept" : "accept(type) ",
		"accept_json" : "accept_json() ",
		"accept_xml" : "accept_xml() ",
		"add_headers" : "add_headers(..., .headers = character()) ",
		"authenticate" : "authenticate(user, password, type = \"basic\") ",
		"brew_dr" : "brew_dr() ",
		"BROWSE" : "BROWSE(url = NULL, config = list(), ..., handle = NULL) ",
		"build_url" : "build_url(url) ",
		"cache_info" : "cache_info(r) ",
		"config" : "config(...) ",
		"content" : "content(x, as = NULL, type = NULL, encoding = NULL, ...) ",
		"content_type" : "content_type(type) ",
		"content_type_json" : "content_type_json() ",
		"content_type_xml" : "content_type_xml() ",
		"cookies" : "cookies(x) ",
		"curl_docs" : "curl_docs(x) ",
		"DELETE" : "DELETE(url = NULL, config = list(), ..., handle = NULL) ",
		"GET" : "GET(url = NULL, config = list(), ..., handle = NULL) ",
		"guess_media" : "guess_media(x) ",
		"handle" : "handle(url, cookies = TRUE) ",
		"handle_find" : "handle_find(url) ",
		"handle_reset" : "handle_reset(url) ",
		"has_content" : "has_content(x) ",
		"HEAD" : "HEAD(url = NULL, config = list(), ..., handle = NULL) ",
		"headers" : "headers(x) ",
		"hmac_sha1" : "hmac_sha1(key, string) ",
		"http_condition" : "http_condition(x, type, message = NULL, call = sys.call(-1)) ",
		"http_date" : "http_date(x) ",
		"http_status" : "http_status(x) ",
		"httr_options" : "httr_options(matches) ",
		"init_oauth1.0" : "init_oauth1.0(endpoint, app, permission = NULL, is_interactive = interactive()) ",
		"init_oauth2.0" : "init_oauth2.0(endpoint, app, scope = NULL, type = NULL, use_oob = getOption(\"httr_oob_default\"), is_interactive = interactive()) ",
		"insensitive" : "insensitive(x) ",
		"modify_url" : "modify_url(url, scheme = NULL, hostname = NULL, port = NULL, path = NULL, query = NULL, params = NULL, fragment = NULL, username = NULL, password = NULL) ",
		"oauth_app" : "oauth_app(appname, key, secret = NULL) ",
		"oauth_callback" : "oauth_callback() ",
		"oauth_endpoint" : "oauth_endpoint(request = NULL, authorize, access, ..., base_url = NULL) ",
		"oauth_endpoints" : "oauth_endpoints(name) ",
		"oauth_exchanger" : "oauth_exchanger(request_url) ",
		"oauth_header" : "oauth_header(info) ",
		"oauth_listener" : "oauth_listener(request_url, is_interactive = interactive()) ",
		"oauth_service_token" : "oauth_service_token(endpoint, secrets, scope = NULL) ",
		"oauth_signature" : "oauth_signature(url, method = \"GET\", app, token = NULL, token_secret = NULL, ...) ",
		"oauth1.0_token" : "oauth1.0_token(endpoint, app, permission = NULL, as_header = TRUE, cache = getOption(\"httr_oauth_cache\")) ",
		"oauth2.0_token" : "oauth2.0_token(endpoint, app, scope = NULL, type = NULL, use_oob = getOption(\"httr_oob_default\"), as_header = TRUE, cache = getOption(\"httr_oauth_cache\")) ",
		"parse_http_date" : "parse_http_date(x, failure = NA) ",
		"parse_media" : "parse_media(x) ",
		"parse_url" : "parse_url(url) ",
		"parsed_content" : "parsed_content(x, ...) ",
		"PATCH" : "PATCH(url = NULL, config = list(), ..., body = NULL, encode = c(\"multipart\", \"form\", \"json\"), multipart = TRUE, handle = NULL) ",
		"POST" : "POST(url = NULL, config = list(), ..., body = NULL, encode = c(\"multipart\", \"form\", \"json\"), multipart = TRUE, handle = NULL) ",
		"progress" : "progress(type = c(\"down\", \"up\")) ",
		"PUT" : "PUT(url = NULL, config = list(), ..., body = NULL, encode = c(\"multipart\", \"form\", \"json\"), multipart = TRUE, handle = NULL) ",
		"rerequest" : "rerequest(r) ",
		"reset_config" : "reset_config() ",
		"revoke_all" : "revoke_all(cache_path = NA) ",
		"safe_callback" : "safe_callback(f) ",
		"set_config" : "set_config(config, override = FALSE) ",
		"set_cookies" : "set_cookies(..., .cookies = character(0)) ",
		"sign_oauth1.0" : "sign_oauth1.0(app, token = NULL, token_secret = NULL, as_header = TRUE, ...) ",
		"sign_oauth2.0" : "sign_oauth2.0(access_token, as_header = TRUE) ",
		"status_code" : "status_code(x) ",
		"stop_for_status" : "stop_for_status(x) ",
		"text_content" : "text_content(x) ",
		"timeout" : "timeout(seconds) ",
		"upload_file" : "upload_file(path, type = NULL) ",
		"url_ok" : "url_ok(...) ",
		"url_success" : "url_success(...) ",
		"use_proxy" : "use_proxy(url, port = NULL, username = NULL, password = NULL) ",
		"user_agent" : "user_agent(agent) ",
		"VERB" : "VERB(verb, url = NULL, config = list(), ..., handle = NULL) ",
		"verbose" : "verbose(data_out = TRUE, data_in = FALSE, info = FALSE, ssl = FALSE) ",
		"warn_for_status" : "warn_for_status(x) ",
		"with_config" : "with_config(config = config(), expr, override = FALSE) ",
		"with_verbose" : "with_verbose(expr, ...) ",
		"write_disk" : "write_disk(path, overwrite = FALSE) ",
		"write_function" : "write_function(subclass, ...) ",
		"write_init" : "write_init(x) ",
		"write_memory" : "write_memory() ",
		"write_opts" : "write_opts(x) ",
		"write_stream" : "write_stream(f) ",
		"write_term" : "write_term(x) "
	}
}