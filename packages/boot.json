{
	"objects" : [
		"abc.ci",
		"acme",
		"aids",
		"aircondit",
		"aircondit7",
		"amis",
		"aml",
		"beaver",
		"bigcity",
		"boot",
		"boot.array",
		"boot.ci",
		"brambles",
		"breslow",
		"calcium",
		"cane",
		"capability",
		"catsM",
		"cav",
		"cd4",
		"cd4.nested",
		"censboot",
		"channing",
		"city",
		"claridge",
		"cloth",
		"co.transfer",
		"coal",
		"control",
		"corr",
		"cum3",
		"cv.glm",
		"darwin",
		"dogs",
		"downs.bc",
		"ducks",
		"EEF.profile",
		"EL.profile",
		"empinf",
		"envelope",
		"exp.tilt",
		"fir",
		"freq.array",
		"frets",
		"glm.diag",
		"glm.diag.plots",
		"grav",
		"gravity",
		"hirose",
		"imp.moments",
		"imp.prob",
		"imp.quantile",
		"imp.weights",
		"inv.logit",
		"islay",
		"jack.after.boot",
		"k3.linear",
		"lik.CI",
		"linear.approx",
		"logit",
		"manaus",
		"melanoma",
		"motor",
		"nested.corr",
		"neuro",
		"nitrofen",
		"nodal",
		"norm.ci",
		"nuclear",
		"paulsen",
		"poisons",
		"polar",
		"remission",
		"saddle",
		"saddle.distn",
		"salinity",
		"simplex",
		"smooth.f",
		"survival",
		"tau",
		"tilt.boot",
		"tsboot",
		"tuna",
		"urine",
		"var.linear",
		"wool"
	],
	"methods" : {
		"abc.ci" : "abc.ci(data, statistic, index = 1, strata = rep(1, n), conf = 0.95, eps = 0.001/n, ...) ",
		"boot" : "boot(data, statistic, R, sim = \"ordinary\", stype = c(\"i\", \"f\", \"w\"), strata = rep(1, n), L = NULL, m = 0, weights = NULL, ran.gen = function(d, p) d, mle = NULL, simple = FALSE, ..., parallel = c(\"no\", \"multicore\", \"snow\"), ncpus = getOption(\"boot.ncpus\",     1L), cl = NULL) ",
		"boot.array" : "boot.array(boot.out, indices = FALSE) ",
		"boot.ci" : "boot.ci(boot.out, conf = 0.95, type = \"all\", index = 1L:min(2L, length(boot.out$t0)), var.t0 = NULL, var.t = NULL, t0 = NULL, t = NULL, L = NULL, h = function(t) t, hdot = function(t) rep(1,     length(t)), hinv = function(t) t, ...) ",
		"censboot" : "censboot(data, statistic, R, F.surv, G.surv, strata = matrix(1, n, 2), sim = \"ordinary\", cox = NULL, index = c(1, 2), ..., parallel = c(\"no\", \"multicore\", \"snow\"), ncpus = getOption(\"boot.ncpus\",     1L), cl = NULL) ",
		"control" : "control(boot.out, L = NULL, distn = NULL, index = 1, t0 = NULL, t = NULL, bias.adj = FALSE, alpha = NULL, ...) ",
		"corr" : "corr(d, w = rep(1, nrow(d))/nrow(d)) ",
		"cum3" : "cum3(a, b = a, c = a, unbiased = TRUE) ",
		"cv.glm" : "cv.glm(data, glmfit, cost = function(y, yhat) mean((y - yhat)^2), K = n) ",
		"EEF.profile" : "EEF.profile(y, tmin = min(y) + 0.1, tmax = max(y) - 0.1, n.t = 25, u = function(y, t) y - t) ",
		"EL.profile" : "EL.profile(y, tmin = min(y) + 0.1, tmax = max(y) - 0.1, n.t = 25, u = function(y, t) y - t) ",
		"empinf" : "empinf(boot.out = NULL, data = NULL, statistic = NULL, type = NULL, stype = NULL, index = 1, t = NULL, strata = rep(1, n), eps = 0.001, ...) ",
		"envelope" : "envelope(boot.out = NULL, mat = NULL, level = 0.95, index = 1L:ncol(mat)) ",
		"exp.tilt" : "exp.tilt(L, theta = NULL, t0 = 0, lambda = NULL, strata = rep(1, length(L))) ",
		"freq.array" : "freq.array(i.array) ",
		"glm.diag" : "glm.diag(glmfit) ",
		"glm.diag.plots" : "glm.diag.plots(glmfit, glmdiag = glm.diag(glmfit), subset = NULL, iden = FALSE, labels = NULL, ret = FALSE) ",
		"imp.moments" : "imp.moments(boot.out = NULL, index = 1, t = boot.out$t[, index], w = NULL, def = TRUE, q = NULL) ",
		"imp.prob" : "imp.prob(boot.out = NULL, index = 1, t0 = boot.out$t0[index], t = boot.out$t[, index], w = NULL, def = TRUE, q = NULL) ",
		"imp.quantile" : "imp.quantile(boot.out = NULL, alpha = NULL, index = 1, t = boot.out$t[, index], w = NULL, def = TRUE, q = NULL) ",
		"imp.weights" : "imp.weights(boot.out, def = TRUE, q = NULL) ",
		"inv.logit" : "inv.logit(x) ",
		"jack.after.boot" : "jack.after.boot(boot.out, index = 1, t = NULL, L = NULL, useJ = TRUE, stinf = TRUE, alpha = NULL, main = \"\", ylab = NULL, ...) ",
		"k3.linear" : "k3.linear(L, strata = NULL) ",
		"lik.CI" : "lik.CI(like, lim) ",
		"linear.approx" : "linear.approx(boot.out, L = NULL, index = 1, type = NULL, t0 = NULL, t = NULL, ...) ",
		"logit" : "logit(p) ",
		"nested.corr" : "nested.corr(data, w, t0, M) ",
		"norm.ci" : "norm.ci(boot.out = NULL, conf = 0.95, index = 1, var.t0 = NULL, t0 = NULL, t = NULL, L = NULL, h = function(t) t, hdot = function(t) 1, hinv = function(t) t) ",
		"saddle" : "saddle(A = NULL, u = NULL, wdist = \"m\", type = \"simp\", d = NULL, d1 = 1, init = rep(0.1, d), mu = rep(0.5, n), LR = FALSE, strata = NULL, K.adj = NULL, K2 = NULL) ",
		"saddle.distn" : "saddle.distn(A, u = NULL, alpha = NULL, wdist = \"m\", type = \"simp\", npts = 20, t = NULL, t0 = NULL, init = rep(0.1, d), mu = rep(0.5,     n), LR = FALSE, strata = NULL, ...) ",
		"simplex" : "simplex(a, A1 = NULL, b1 = NULL, A2 = NULL, b2 = NULL, A3 = NULL, b3 = NULL, maxi = FALSE, n.iter = n + 2 * m, eps = 1e-10) ",
		"smooth.f" : "smooth.f(theta, boot.out, index = 1, t = boot.out$t[, index], width = 0.5) ",
		"tilt.boot" : "tilt.boot(data, statistic, R, sim = \"ordinary\", stype = \"i\", strata = rep(1, n), L = NULL, theta = NULL, alpha = c(0.025,     0.975), tilt = TRUE, width = 0.5, index = 1, ...) ",
		"tsboot" : "tsboot(tseries, statistic, R, l = NULL, sim = \"model\", endcorr = TRUE, n.sim = NROW(tseries), orig.t = TRUE, ran.gen = function(tser,     n.sim, args) tser, ran.args = NULL, norm = TRUE, ..., parallel = c(\"no\", \"multicore\", \"snow\"), ncpus = getOption(\"boot.ncpus\",     1L), cl = NULL) ",
		"var.linear" : "var.linear(L, strata = NULL) "
	}
}